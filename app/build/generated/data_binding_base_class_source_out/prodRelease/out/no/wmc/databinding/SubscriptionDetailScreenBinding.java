// Generated by data binding compiler. Do not edit!
package no.wmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import no.wmc.R;
import no.wmc.domain.model.Subscription;

public abstract class SubscriptionDetailScreenBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton addMemberButton;

  @NonNull
  public final MaterialButton cancelSubscriptionButton;

  @NonNull
  public final TextView expiredTitle;

  @NonNull
  public final LinearLayoutCompat membersLayout;

  @NonNull
  public final TextView membershipHint;

  @NonNull
  public final TextView membershipOccupancyTitle;

  @NonNull
  public final TextView paidWithTitle;

  @NonNull
  public final MaterialCardView paymentCard;

  @NonNull
  public final TextView paymentMethodNumber;

  @NonNull
  public final TextView paymentMethodTitle;

  @NonNull
  public final TextView subscriptionManagerTitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  @Bindable
  protected Boolean mIsLoading;

  @Bindable
  protected Subscription mModel;

  protected SubscriptionDetailScreenBinding(Object _bindingComponent, View _root,
      int _localFieldCount, MaterialButton addMemberButton, MaterialButton cancelSubscriptionButton,
      TextView expiredTitle, LinearLayoutCompat membersLayout, TextView membershipHint,
      TextView membershipOccupancyTitle, TextView paidWithTitle, MaterialCardView paymentCard,
      TextView paymentMethodNumber, TextView paymentMethodTitle, TextView subscriptionManagerTitle,
      TextView title, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addMemberButton = addMemberButton;
    this.cancelSubscriptionButton = cancelSubscriptionButton;
    this.expiredTitle = expiredTitle;
    this.membersLayout = membersLayout;
    this.membershipHint = membershipHint;
    this.membershipOccupancyTitle = membershipOccupancyTitle;
    this.paidWithTitle = paidWithTitle;
    this.paymentCard = paymentCard;
    this.paymentMethodNumber = paymentMethodNumber;
    this.paymentMethodTitle = paymentMethodTitle;
    this.subscriptionManagerTitle = subscriptionManagerTitle;
    this.title = title;
    this.toolbar = toolbar;
  }

  public abstract void setIsLoading(@Nullable Boolean isLoading);

  @Nullable
  public Boolean getIsLoading() {
    return mIsLoading;
  }

  public abstract void setModel(@Nullable Subscription model);

  @Nullable
  public Subscription getModel() {
    return mModel;
  }

  @NonNull
  public static SubscriptionDetailScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.subscription_detail_screen, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SubscriptionDetailScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SubscriptionDetailScreenBinding>inflateInternal(inflater, R.layout.subscription_detail_screen, root, attachToRoot, component);
  }

  @NonNull
  public static SubscriptionDetailScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.subscription_detail_screen, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SubscriptionDetailScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SubscriptionDetailScreenBinding>inflateInternal(inflater, R.layout.subscription_detail_screen, null, false, component);
  }

  public static SubscriptionDetailScreenBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SubscriptionDetailScreenBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SubscriptionDetailScreenBinding)bind(component, view, R.layout.subscription_detail_screen);
  }
}
