// Generated by data binding compiler. Do not edit!
package no.wmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import no.wmc.R;

public abstract class RegisterScreenBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton createAccountButton;

  @NonNull
  public final TextInputLayout email;

  @NonNull
  public final Guideline endGuideline;

  @NonNull
  public final MaterialButton googleButton;

  @NonNull
  public final View loading;

  @NonNull
  public final TextInputLayout password;

  @NonNull
  public final TextView passwordMinHint;

  @NonNull
  public final TextView registerByline;

  @NonNull
  public final View screenDivider;

  @NonNull
  public final Guideline startGuideline;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  protected RegisterScreenBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton createAccountButton, TextInputLayout email, Guideline endGuideline,
      MaterialButton googleButton, View loading, TextInputLayout password, TextView passwordMinHint,
      TextView registerByline, View screenDivider, Guideline startGuideline, TextView title,
      Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.createAccountButton = createAccountButton;
    this.email = email;
    this.endGuideline = endGuideline;
    this.googleButton = googleButton;
    this.loading = loading;
    this.password = password;
    this.passwordMinHint = passwordMinHint;
    this.registerByline = registerByline;
    this.screenDivider = screenDivider;
    this.startGuideline = startGuideline;
    this.title = title;
    this.toolbar = toolbar;
  }

  @NonNull
  public static RegisterScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_screen, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RegisterScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RegisterScreenBinding>inflateInternal(inflater, R.layout.register_screen, root, attachToRoot, component);
  }

  @NonNull
  public static RegisterScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_screen, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RegisterScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RegisterScreenBinding>inflateInternal(inflater, R.layout.register_screen, null, false, component);
  }

  public static RegisterScreenBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RegisterScreenBinding bind(@NonNull View view, @Nullable Object component) {
    return (RegisterScreenBinding)bind(component, view, R.layout.register_screen);
  }
}
