// Generated by data binding compiler. Do not edit!
package no.wmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import no.wmc.R;
import no.wmc.domain.model.Subscription;

public abstract class ItemSubscriptionOverviewBinding extends ViewDataBinding {
  @NonNull
  public final TextView expiredTitle;

  @NonNull
  public final TextView membershipOccupancyTitle;

  @NonNull
  public final ImageView rectangleBar;

  @NonNull
  public final MaterialButton removeMembershipButton;

  @NonNull
  public final MaterialCardView subscriptionCard;

  @NonNull
  public final TextView subscriptionManagerTitle;

  @NonNull
  public final ImageView triangleBar;

  @Bindable
  protected Subscription mModel;

  protected ItemSubscriptionOverviewBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView expiredTitle, TextView membershipOccupancyTitle,
      ImageView rectangleBar, MaterialButton removeMembershipButton,
      MaterialCardView subscriptionCard, TextView subscriptionManagerTitle, ImageView triangleBar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.expiredTitle = expiredTitle;
    this.membershipOccupancyTitle = membershipOccupancyTitle;
    this.rectangleBar = rectangleBar;
    this.removeMembershipButton = removeMembershipButton;
    this.subscriptionCard = subscriptionCard;
    this.subscriptionManagerTitle = subscriptionManagerTitle;
    this.triangleBar = triangleBar;
  }

  public abstract void setModel(@Nullable Subscription model);

  @Nullable
  public Subscription getModel() {
    return mModel;
  }

  @NonNull
  public static ItemSubscriptionOverviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_subscription_overview, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemSubscriptionOverviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemSubscriptionOverviewBinding>inflateInternal(inflater, R.layout.item_subscription_overview, root, attachToRoot, component);
  }

  @NonNull
  public static ItemSubscriptionOverviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_subscription_overview, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemSubscriptionOverviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemSubscriptionOverviewBinding>inflateInternal(inflater, R.layout.item_subscription_overview, null, false, component);
  }

  public static ItemSubscriptionOverviewBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemSubscriptionOverviewBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ItemSubscriptionOverviewBinding)bind(component, view, R.layout.item_subscription_overview);
  }
}
