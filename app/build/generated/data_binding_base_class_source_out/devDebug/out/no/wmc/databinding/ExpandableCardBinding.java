// Generated by data binding compiler. Do not edit!
package no.wmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import no.wmc.R;

public abstract class ExpandableCardBinding extends ViewDataBinding {
  @NonNull
  public final MaterialButton addButton;

  @NonNull
  public final TextView cancelEditItemButton;

  @NonNull
  public final HorizontalScrollView cardActionLayout;

  @NonNull
  public final TextView description;

  @NonNull
  public final ConstraintLayout editActionLayout;

  @NonNull
  public final MaterialButton editButton;

  @NonNull
  public final ImageView expandButton;

  @NonNull
  public final MaterialCardView expandableCard;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final LinearLayout infoLayout;

  @NonNull
  public final RecyclerView list;

  @NonNull
  public final TextView removeItemButton;

  @NonNull
  public final MaterialButton shareButton;

  @NonNull
  public final TextView title;

  @NonNull
  public final ConstraintLayout titlePanel;

  @NonNull
  public final MaterialButton translateButton;

  @Bindable
  protected Boolean mIsEditMode;

  @Bindable
  protected Boolean mIsLoading;

  protected ExpandableCardBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialButton addButton, TextView cancelEditItemButton,
      HorizontalScrollView cardActionLayout, TextView description,
      ConstraintLayout editActionLayout, MaterialButton editButton, ImageView expandButton,
      MaterialCardView expandableCard, ImageView icon, LinearLayout infoLayout, RecyclerView list,
      TextView removeItemButton, MaterialButton shareButton, TextView title,
      ConstraintLayout titlePanel, MaterialButton translateButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addButton = addButton;
    this.cancelEditItemButton = cancelEditItemButton;
    this.cardActionLayout = cardActionLayout;
    this.description = description;
    this.editActionLayout = editActionLayout;
    this.editButton = editButton;
    this.expandButton = expandButton;
    this.expandableCard = expandableCard;
    this.icon = icon;
    this.infoLayout = infoLayout;
    this.list = list;
    this.removeItemButton = removeItemButton;
    this.shareButton = shareButton;
    this.title = title;
    this.titlePanel = titlePanel;
    this.translateButton = translateButton;
  }

  public abstract void setIsEditMode(@Nullable Boolean isEditMode);

  @Nullable
  public Boolean getIsEditMode() {
    return mIsEditMode;
  }

  public abstract void setIsLoading(@Nullable Boolean isLoading);

  @Nullable
  public Boolean getIsLoading() {
    return mIsLoading;
  }

  @NonNull
  public static ExpandableCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.expandable_card, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ExpandableCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ExpandableCardBinding>inflateInternal(inflater, R.layout.expandable_card, root, attachToRoot, component);
  }

  @NonNull
  public static ExpandableCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.expandable_card, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ExpandableCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ExpandableCardBinding>inflateInternal(inflater, R.layout.expandable_card, null, false, component);
  }

  public static ExpandableCardBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ExpandableCardBinding bind(@NonNull View view, @Nullable Object component) {
    return (ExpandableCardBinding)bind(component, view, R.layout.expandable_card);
  }
}
