// Generated by data binding compiler. Do not edit!
package no.wmc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.google.android.material.card.MaterialCardView;
import java.lang.Deprecated;
import java.lang.Object;
import no.wmc.R;
import no.wmc.domain.model.NewSubscription;

public abstract class ItemNewSubscriptionBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton btnPurchase;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView price;

  @NonNull
  public final RecyclerView recyclerviewBenefit;

  @NonNull
  public final MaterialCardView subscriptionCard;

  @NonNull
  public final AppCompatImageView thumbnail;

  @NonNull
  public final TextView txtPlantype;

  @NonNull
  public final TextView txtRedeemCode;

  @Bindable
  protected NewSubscription mModel;

  protected ItemNewSubscriptionBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatButton btnPurchase, ImageView imageView, TextView price,
      RecyclerView recyclerviewBenefit, MaterialCardView subscriptionCard,
      AppCompatImageView thumbnail, TextView txtPlantype, TextView txtRedeemCode) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnPurchase = btnPurchase;
    this.imageView = imageView;
    this.price = price;
    this.recyclerviewBenefit = recyclerviewBenefit;
    this.subscriptionCard = subscriptionCard;
    this.thumbnail = thumbnail;
    this.txtPlantype = txtPlantype;
    this.txtRedeemCode = txtRedeemCode;
  }

  public abstract void setModel(@Nullable NewSubscription model);

  @Nullable
  public NewSubscription getModel() {
    return mModel;
  }

  @NonNull
  public static ItemNewSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_new_subscription, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemNewSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemNewSubscriptionBinding>inflateInternal(inflater, R.layout.item_new_subscription, root, attachToRoot, component);
  }

  @NonNull
  public static ItemNewSubscriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_new_subscription, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemNewSubscriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemNewSubscriptionBinding>inflateInternal(inflater, R.layout.item_new_subscription, null, false, component);
  }

  public static ItemNewSubscriptionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemNewSubscriptionBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemNewSubscriptionBinding)bind(component, view, R.layout.item_new_subscription);
  }
}
